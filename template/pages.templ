package template

import (
	"openlettings.com/types"
	"openlettings.com/utils"
	"fmt"
)

templ ListingsFilter(filter types.PropertyFilter) {
	<form action="/listings" method="GET">
		<div class="join">
			<div>
				<div>
					<input class="input input-bordered join-item" name="address" value={ filter.Address } placeholder="Address"/>
				</div>
			</div>
			<select class="select select-bordered join-item" name="type">
				<option value="" selected?={ filter.Property_type == "" }>Property type</option>
				<option value="apartment" selected?={ filter.Property_type == "apartment" }>Apartment</option>
				<option value="house" selected?={ filter.Property_type == "house" }>House</option>
				<option value="condo" selected?={ filter.Property_type == "condo" }>Condo</option>
				<option value="bungalo" selected?={ filter.Property_type == "bungalo" }>Bungalo</option>
				<option value="cottage" selected?={ filter.Property_type == "cottage" }>Cottage</option>
			</select>
			<select class="select select-bordered join-item" name="bedrooms">
				<option selected>Bedrooms</option>
				<option>1</option>
				<option>2</option>
				<option>3</option>
				<option>4</option>
				<option>5</option>
				<option>6</option>
			</select>
			<select class="select select-bordered join-item" name="bathrooms">
				<option selected>Bathrooms</option>
				<option>1</option>
				<option>2</option>
				<option>3</option>
				<option>4</option>
				<option>5</option>
				<option>6</option>
			</select>
			<div class="indicator">
				<button class="btn join-item" type="submit">Search</button>
			</div>
		</div>
	</form>
}

templ ListingsPage(filter types.PropertyFilter,properties []types.PropertySummary,hasNext bool, nextPage string) {
	<main hx-boost="true">
		@ListingsFilter(filter)
		<div class="max-h-[80vh] overflow-y-auto">
			@Listings(properties,hasNext,nextPage)
		</div>
	</main>
}

templ Listings(properties []types.PropertySummary,hasNext bool,nextPage string) {
	for i, property := range properties {
		<div
 			if utils.IsLast(i,properties) && hasNext {
				hx-get={ nextPage }
				hx-trigger="revealed"
				hx-swap="afterend"
			}
		>
			<a href={ templ.URL(fmt.Sprintf("/listings/%d", property.PropertyId)) }>
				<div class="card mb-3">
					<img src={ fmt.Sprintf("/images/%s", property.Url) } class="card-img-top" alt="..."/>
					<div class="card-body">
						<h5 class="card-title">{ property.Title }</h5>
						<p class="card-text">{ property.Description }</p>
						<p class="card-text"><small class="text-body-secondary">{ fmt.Sprintf("%f",property.Price) }</small></p>
					</div>
				</div>
			</a>
		</div>
	}
}

templ ListingDetails(property types.Property) {
	<main>
		<h1>{ property.Title }</h1>
		<h3>{ property.Address }</h3>
		<h5>{ fmt.Sprintf("%f",property.Price) }</h5>
		<p>{ property.Description }</p>
	</main>
}

templ Home() {
	<main>
		<h1>This is the Home page</h1>
		@SearchForm()
	</main>
}

templ SearchForm() {
	<form action="/search-properties" method="GET" hx-boost="true">
		<div class="w-auto flex-1 grid place-items-center bg-blue-300">
			<div class="w-1/2 h-48 bg-blue-50 rounded-lg flex flex-col">
				<div class="flex flex-row w-full justify-evenly border-b h-8">
					<h1>To Rent</h1>
					<h1>To Buy</h1>
				</div>
				<div class="flex-1 flex flex-row w-full  justify-evenly items-center">
					<input name="address" type="text" placeholder="e.g St.James Barbados" class="input input-bordered w-full max-w-xs"/>
					<button type="submit" class="btn btn-outline btn-info">Search</button>
				</div>
			</div>
		</div>
	</form>
}

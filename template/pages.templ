package template

import (
	"openlettings.com/types"
	"openlettings.com/utils"
	"openlettings.com/db"
	"fmt"
)

var countryKey types.ContextKey = "countries"
var propertyKey types.ContextKey = "property_types"
var userIDKey types.ContextKey = "user-id"

templ Options(options []db.Option) {
	for _, option :=range(options) {
		<option value={ fmt.Sprint(option.Id) }>{ option.Name }</option>
	}
}

templ ListingsFilter(filter types.PropertyFilter) {
	<div>
		<form action="/listings" method="GET">
			<div class="join">
				<select class="select select-bordered join-item" name="country" hx-get="/parishes" hx-target="#parishes">
					<option selected>Country</option>
					if countries,ok := ctx.Value(countryKey).(([]db.Option)); ok {
						for _, option := range(countries) {
							<option value={ fmt.Sprint(option.Id) } selected?={ filter.Country == option.Id }>{ option.Name }</option>
						}
					}
				</select>
				<select class="select select-bordered join-item" name="parish" id="parishes">
					<option value="0" selected>Parish</option>
				</select>
				<select class="select select-bordered join-item" name="property_type">
					<option value="0" selected?={ filter.Property_type == 0 }>Property type</option>
					if property_types, ok := ctx.Value(propertyKey).([]db.Option); ok {
						for _, option := range(property_types) {
							<option value={ fmt.Sprint(option.Id) } selected?={ filter.Property_type == option.Id }>{ option.Name }</option>
						}
					}
				</select>
				<select class="select select-bordered join-item" name="bedrooms">
					<option selected>Bedrooms</option>
					<option>1</option>
					<option>2</option>
					<option>3</option>
					<option>4</option>
					<option>5</option>
					<option>6</option>
				</select>
				<select class="select select-bordered join-item" name="bathrooms">
					<option selected>Bathrooms</option>
					<option>1</option>
					<option>2</option>
					<option>3</option>
					<option>4</option>
					<option>5</option>
					<option>6</option>
				</select>
				<select class="select select-bordered join-item" name="maxprice">
					<option selected>Max Price</option>
					<option>1000</option>
					<option>1000000</option>
					<option>10000000</option>
					<option>100000000</option>
					<option>10000000000</option>
					<option>1000000000000</option>
				</select>
				<select class="select select-bordered join-item" name="minprice">
					<option selected>Min Price</option>
					<option>10000</option>
					<option>1000000</option>
					<option>10000000</option>
					<option>1000000000</option>
					<option>10000000000</option>
					<option>1000000000000</option>
				</select>
				<div class="indicator">
					<button class="btn join-item" type="submit">Search</button>
				</div>
			</div>
		</form>
	</div>
}

templ ListingsPage(filter types.PropertyFilter, query string) {
	<main hx-boost="true">
		<div class=" grid place-items-center h-24">
			@ListingsFilter(filter)
		</div>
		<div class=" grid place-items-center" id="listings" hx-get={ "/listings?" + query } hx-trigger="revealed"></div>
	</main>
}

templ Listings(properties []types.PropertySummary,hasNext bool,nextPage string) {
	for i, property := range properties {
		<a
 			if utils.IsLast(i,properties) && hasNext {
				hx-get={ nextPage }
				hx-trigger="revealed"
				hx-swap="afterend"
			}
 			class="card card-side w-3/5 mb-5 bg-base-100 shadow-xl"
 			href={ templ.URL(fmt.Sprintf("/listings/%d", property.PropertyId)) }
		>
			<figure class="w-1/2 w-7/12 h-96"><img src={ fmt.Sprintf("/images/%s", property.Url) } class=" w-full h-full" alt="..."/></figure>
			<div class="card-body w-5/12 h-96">
				<h5 class="card-title">{ property.Title }</h5>
				<p class="card-text">{ property.Description }</p>
				<p class="card-text"><small class="text-body-secondary">{ fmt.Sprintf("%f",property.Price) }</small></p>
				<div class="card-actions justify-end">
					<div class="badge badge-outline">Type</div>
					<div class="badge badge-outline">Bedrooms</div>
					<div class="badge badge-outline">Bathrooma</div>
				</div>
			</div>
		</a>
	}
}

templ ListingDetails(property types.Property) {
	<main>
		@ImageCarousel()
		<h1>{ property.Title }</h1>
		<h3>{ property.Address }</h3>
		<h5>{ fmt.Sprintf("%f",property.Price) }</h5>
		<p>{ property.Description }</p>
	</main>
}

templ ImageCarousel() {
	<div class="carousel w-full">
		<div id="slide1" class="carousel-item relative w-full">
			<img src="https://daisyui.com/images/stock/photo-1625726411847-8cbb60cc71e6.jpg" class="w-full"/>
			<div class="absolute flex justify-between transform -translate-y-1/2 left-5 right-5 top-1/2">
				<a href="#slide4" class="btn btn-circle">❮</a>
				<a href="#slide2" class="btn btn-circle">❯</a>
			</div>
		</div>
		<div id="slide2" class="carousel-item relative w-full">
			<img src="https://daisyui.com/images/stock/photo-1609621838510-5ad474b7d25d.jpg" class="w-full"/>
			<div class="absolute flex justify-between transform -translate-y-1/2 left-5 right-5 top-1/2">
				<a href="#slide1" class="btn btn-circle">❮</a>
				<a href="#slide3" class="btn btn-circle">❯</a>
			</div>
		</div>
		<div id="slide3" class="carousel-item relative w-full">
			<img src="https://daisyui.com/images/stock/photo-1414694762283-acccc27bca85.jpg" class="w-full"/>
			<div class="absolute flex justify-between transform -translate-y-1/2 left-5 right-5 top-1/2">
				<a href="#slide2" class="btn btn-circle">❮</a>
				<a href="#slide4" class="btn btn-circle">❯</a>
			</div>
		</div>
	</div>
}

templ Home() {
	<main class="h-full">
		@SearchForm()
	</main>
}

templ SearchForm() {
	<div class="w-auto flex-1 grid place-items-center bg-blue-300 h-[92vh]">
		<form class="w-1/2 h-48 bg-blue-50 rounded-lg flex flex-col" action="/search-properties" method="GET" hx-boost="true">
			<div class="flex flex-row w-full justify-evenly border-b h-8">
				<h1>To Rent</h1>
				<h1>To Buy</h1>
			</div>
			<div class="flex-1 flex flex-row w-full  justify-evenly items-center">
				<input name="address" type="text" placeholder="e.g St.James Barbados" class="input input-bordered w-full max-w-xs"/>
				<button type="submit" class="btn btn-outline btn-info">Search</button>
			</div>
		</form>
	</div>
}
